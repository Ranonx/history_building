# @format

name: Flask Application CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build_and_test:
    runs-on: ubuntu-latest

    services:
      redis:
        image: redis
        ports:
          - 6379:6379

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.8
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install gunicorn flask_sqlalchemy flask requests pytest
          # If you have a requirements.txt
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Setup Database
        run: |
          # Setup test database and environment variables
          echo "SQLALCHEMY_DATABASE_URI=sqlite:///:memory:" >> $GITHUB_ENV
          echo "FLASK_ENV=development" >> $GITHUB_ENV
          # Initialize database (mimicking load_initialize_data() logic)
          python -c "from app import db; db.create_all()"

      - name: Start Main Server
        run: |
          gunicorn --bind 0.0.0.0:5000 src.app:app &
        background: true

      - name: Start Worker Server - Collect
        run: |
          # Simulate 'make collect' - start your data collection worker
          python -c "import src; src.collect_worker()"
        background: true

      - name: Start Worker Server - Analyse
        run: |
          # Simulate 'make analyse' - start your analysis worker
          python -c "import src; src.analyse_worker()"
        background: true

      - name: Run Tests
        run: |
          pytest tests/test_routes.py

      - name: Additional Cleanup
        if: always()
        run: |
          # Kill all running Python processes
          kill $(ps aux | grep 'gunicorn' | awk '{print $2}')
